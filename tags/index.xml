<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tags on My New Hugo Site</title>
    <link>https://jasonzii.github.io/tags/</link>
    <description>Recent content in Tags on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
        <atom:link href="https://jasonzii.github.io/tags/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blog</title>
      <link>https://jasonzii.github.io/post/blog/</link>
      <pubDate>Sat, 07 Nov 2020 23:32:14 +0800</pubDate>
      
      <guid>https://jasonzii.github.io/post/blog/</guid>
      <description>关键词：线程池
 继承关系 先观察下 Executor 接口、ExecutorService 接口、AbstractExecutorService 抽象类、ThreadPoolExecutor 类、SchedualedThreadPoolExecutor 类、Executors 类、以及涉及到的 Future
{% asset_img clipboard.png 图片 %}
 Executor 接口 是函数式接口，只有一个参数为 Runnable 类型的方法。
public interface Executor { void execute(Runnable command); }  ExecutorService 接口 继承 Executor 接口 submit 方法可以返回一个 Future 实例，通过 Future 中的 get 方法可以返回线程的运行结果。 注：不管怎样最后一定要shutdown线程池。 第三行：运行完当前线程之后，关闭线程池。 第四行：不管当前线程是否在运行，立刻关闭线程池。 第五行：返回结果是 Callable 中的 call 方法返回值。 第六行：返回结果是参数中的 T result。
public interface ExecutorService extends Executor { boolean isShutdown(); void shutdown(); List&amp;lt;Runnable&amp;gt; shutdownNow(); &amp;lt;T&amp;gt; Future&amp;lt;T&amp;gt; submit(Callable&amp;lt;T&amp;gt; task); &amp;lt;T&amp;gt; Future&amp;lt;T&amp;gt; submit(Runnable task, T result); Future&amp;lt;?</description>
    </item>
    
  </channel>
</rss>
